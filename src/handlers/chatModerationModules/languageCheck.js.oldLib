const LanguageDetect = require('languagedetect');
const { MainLog } = require('../../..');
const lngDetector = new LanguageDetect();
const leetSpeakConverter = require('../../utils/leet-converter');

module.exports.languageDetect = async (_client, message, _guild = undefined) => {
    message.customMetric.addEntry(`LanguageDetect`);
    return new Promise((res, _rej) => {
        let languageDetections = [];
        let languageDetectionsObject = {};

        let toCheck = [];
        toCheck.push(message.content);
        //toCheck.push(message.content.split(' '))
        toCheck.push(leetSpeakConverter.convertInputReverse(message.content));
        //leetSpeakConverter.convertInputReverse(message.content).split(' ').forEach(e => toCheck.push(e));

        toCheck.forEach(e => {
            let res = lngDetector.detect(e);
            languageDetections.push(res);
        });

        languageDetections.forEach(languageDetection => {
            if (languageDetection.length != 0)languageDetection.forEach(indLanguage => {
                if (typeof languageDetectionsObject[indLanguage[0]] == "undefined")languageDetectionsObject[indLanguage[0]] = [];
                languageDetectionsObject[indLanguage[0]].push(indLanguage[1]);
            });
        });

        for (const lang in languageDetectionsObject) {
            languageDetectionsObject[lang] = languageDetectionsObject[lang].reduce((acc,v,i,a)=>(acc+v/a.length),0);
        }

        MainLog.log(JSON.stringify(languageDetectionsObject, null, 2))
        res({result: false});
        res({result: true, value: "Unknown"});
    });
}